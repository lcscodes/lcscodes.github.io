<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on LCS CODES</title>
    <link>https://lcscodes.github.io/docs/</link>
    <description>Recent content in Docs on LCS CODES</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://lcscodes.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://lcscodes.github.io/docs/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lcscodes.github.io/docs/about/</guid>
      <description>Dokumentasi Teknis LCS</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://lcscodes.github.io/docs/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lcscodes.github.io/docs/git/</guid>
      <description>Git#Pengantar Git#Git#Git merupakan software berbasis Version Control System (VCS) yang bertugas untuk mencatat perubahan seluruh file atau repository suatu project.
GitHub#Github adalah aplikasi version control (perekam jejak, setiap meng-edit suatu file) berbasis cloud.
GitBash#Git Bash merupakan aplikasi Windows untuk terminal Git command line. Kemudahannya adalah, kita bisa langsung klik kanan pada explorer untuk mengakses terminal di folder tersebut.</description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://lcscodes.github.io/docs/go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lcscodes.github.io/docs/go/</guid>
      <description>Go#Command Line#Init Modul#Init modul adalah command pertama kali yang harus dijalankan setelah membuat folder project.
 go mod [nama project] Run Server# go run main.go Code#Router main.go# package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;net/http&amp;quot;)func main() {http.HandleFunc(&amp;quot;/&amp;quot;, func(w http.ResponseWriter, r *http.Request) {fmt.Fprintln(w, &amp;quot;halo!&amp;quot;)})fmt.Println(&amp;quot;starting web server at http://localhost:10001/&amp;quot;)http.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://lcscodes.github.io/docs/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lcscodes.github.io/docs/hugo/</guid>
      <description>Hugo#Command Line#help : hugo --helpgenerate folder public : hugonew content : hugo new posts/newpost.md , hugo new docs/newdocs.md Installation#Windows 10#  install scoop
Make sure PowerShell 5 (or later, include PowerShell Core) and .NET Framework 4.5 (or later) are installed. Then run:
Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#39;https://get.scoop.sh&#39;) or shorter
iwr -useb get.scoop.sh | iex Note: if you get an error you might need to change the execution policy (i.</description>
    </item>
    
    <item>
      <title>Laravel</title>
      <link>https://lcscodes.github.io/docs/laravel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lcscodes.github.io/docs/laravel/</guid>
      <description>Laravel#Installation On Windows#  install composer
  buat project
composer create-project laravel/laravel example-app Develop server
cd example-appartisan serve   Basic Usage#Set Database#Open file .env di root folder Make Model# php artisan make:model &amp;lt;model-name&amp;gt; -mTambahan -m artinya untuk generate database migration sekaligus Set Migration#Pada folder root/database/migration, lengkapi field untuk databasenya.</description>
    </item>
    
    <item>
      <title>Node.JS</title>
      <link>https://lcscodes.github.io/docs/nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lcscodes.github.io/docs/nodejs/</guid>
      <description>Node.JS#Pengantar Node.JS#Node.JS#Node.js adalah runtime environment untuk JavaScript. Sama halnya dengan .NET ataupun JRE pada Java.
Dulu, javascript hanya bisa dieksekusi di browser dan hanya untuk frontend saja. Sekarang dengan Node.js, kita dapat menjalankan kode JavaScript di mana pun (frontend maupun backend), tidak hanya terbatas pada lingkungan browser saja.
NPM#NPM adalah Node Package Manager. Digunakan untuk berbagi tool, menginstal modul, dan mengelola dependensi.</description>
    </item>
    
  </channel>
</rss>
