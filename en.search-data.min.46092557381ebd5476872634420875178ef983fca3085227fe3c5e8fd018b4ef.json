[{"id":0,"href":"/docs/about/","title":"About","section":"Docs","content":"Dokumentasi Teknis LCS\n"},{"id":1,"href":"/docs/git/","title":"Github","section":"Docs","content":"Git\r#\r\rPengantar Git\r#\r\rGit\r#\r\rGit merupakan software berbasis Version Control System (VCS) yang bertugas untuk mencatat perubahan seluruh file atau repository suatu project.\nGitHub\r#\r\rGithub adalah aplikasi version control (perekam jejak, setiap meng-edit suatu file) berbasis cloud.\nGitBash\r#\r\rGit Bash merupakan aplikasi Windows untuk terminal Git command line. Kemudahannya adalah, kita bisa langsung klik kanan pada explorer untuk mengakses terminal di folder tersebut.\nCommand Github\r#\r\rUpload\r#\r\r git add .\rgit commit -m \u0026quot;isi keterangan update\u0026quot;\rgit push\r Install Github tes\r#\r\r  git init\n  git config user.name \u0026ldquo;namamu\u0026rdquo;\n  git config user.email \u0026ldquo;email@mu\u0026rdquo;\n  open folder di VS CODE -\u0026gt; clone\n  setelah pengeditan lakukan -\u0026gt; commit -\u0026gt; push\n  "},{"id":2,"href":"/docs/go/","title":"Go","section":"Docs","content":"Go\r#\r\rCommand Line\r#\r\rInit Modul\r#\r\rInit modul adalah command pertama kali yang harus dijalankan setelah membuat folder project.\n go mod [nama project]\r Run Server\r#\r\r go run main.go\r Code\r#\r\rRouter main.go\r#\r\r package main\rimport (\r\u0026quot;fmt\u0026quot;\r\u0026quot;net/http\u0026quot;\r)\rfunc main() {\rhttp.HandleFunc(\u0026quot;/\u0026quot;, func(w http.ResponseWriter, r *http.Request) {\rfmt.Fprintln(w, \u0026quot;halo!\u0026quot;)\r})\rfmt.Println(\u0026quot;starting web server at http://localhost:10001/\u0026quot;)\rhttp.ListenAndServe(\u0026quot;:10001\u0026quot;, nil)\r}\r "},{"id":3,"href":"/docs/hugo/","title":"Hugo","section":"Docs","content":"Hugo\r#\r\rCommand Line\r#\r\rhelp : hugo --help\rgenerate folder public : hugo\rnew content : hugo new posts/newpost.md , hugo new docs/newdocs.md\r Installation\r#\r\rWindows 10\r#\r\r  install scoop\nMake sure PowerShell 5 (or later, include PowerShell Core) and .NET Framework 4.5 (or later) are installed. Then run:\nInvoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')\r or shorter\niwr -useb get.scoop.sh | iex\r Note: if you get an error you might need to change the execution policy (i.e. enable Powershell) with\nSet-ExecutionPolicy RemoteSigned -scope CurrentUser\r   install hugo dengan scoop\nscoop install hugo-extended\r install theme (cari di web hugo)\ngit submodule add https://github.com/alex-shpak/hugo-book themes/book\r Then run hugo (or set theme = \u0026ldquo;book\u0026rdquo;/theme: book in configuration file)\nhugo server --minify --theme book\r   jalankan web dengan perintah\nhugo server\r copy link server ke browser.\nUntuk generate folder public\ncommand: hugo\r folder public akan muncul, website statis siap di upload.\n  "},{"id":4,"href":"/docs/laravel/","title":"Laravel","section":"Docs","content":"Laravel\r#\r\rInstallation On Windows\r#\r\r  install composer\n  buat project\ncomposer create-project laravel/laravel example-app\r Develop server\ncd example-app\rartisan serve\r   Basic Usage\r#\r\rSet Database\r#\r\rOpen file .env di root folder\r Make Model\r#\r\r php artisan make:model \u0026lt;model-name\u0026gt; -m\rTambahan -m artinya untuk generate database migration sekaligus\r Set Migration\r#\r\rPada folder root/database/migration, lengkapi field untuk databasenya. contoh :\r$table-\u0026gt;id();\r$table-\u0026gt;string('nama',100);\r$table-\u0026gt;string('alamat',100);\r$table-\u0026gt;date('tanggalJoin');\r$table-\u0026gt;timestamps();\r migrate database\r#\r\r php artisan migrate\rrollback migrate database\rphp artisan migrate:rollback\rBuka model di root/app/Models/\u0026lt;model-name\u0026gt;. isikan data berikut:\rclass Customer extends Model\r{\rprotected $table = \u0026quot;pegawai\u0026quot;;\rprotected $primaryKey = \u0026quot;id\u0026quot;;\rprotected $fillable =['id','nama','alamat','tanggal_lahir'];\r}\r Laravel Modular\r#\r\rInstallation On Windows\r#\r\r  install composer\n  buat project\ncomposer create-project laravel/laravel example-app\r Develop server\ncd example-app\rphp artisan serve\r   install nwidart modules\ncomposer require nwidart/laravel-modules\r Publish the package\u0026rsquo;s configuration file\nphp artisan vendor:publish --provider=\u0026quot;Nwidart\\Modules\\LaravelModulesServiceProvider\u0026quot;\r By default the module classes are not loaded automatically. autoload your modules. edit file composer.json at root directory. add script autoload modules\n{\r\u0026quot;autoload\u0026quot;: {\r\u0026quot;psr-4\u0026quot;: {\r\u0026quot;App\\\\\u0026quot;: \u0026quot;app/\u0026quot;,\r\u0026quot;Modules\\\\\u0026quot;: \u0026quot;Modules/\u0026quot;\r}\r}\r}\r run autoload\ncomposer dump-autoload\r   Basic Usage Modular\r#\r\r  Creating a module\nHuruf awal kapital\nphp artisan module:make \u0026lt;module-name\u0026gt;\r Beberapa modul sekaligus\nphp artisan module:make \u0026lt;module-name\u0026gt; \u0026lt;module-name\u0026gt; \u0026lt;module-name\u0026gt;\r   "},{"id":5,"href":"/docs/nodejs/","title":"Node.JS","section":"Docs","content":"Node.JS\r#\r\rPengantar Node.JS\r#\r\rNode.JS\r#\r\rNode.js adalah runtime environment untuk JavaScript. Sama halnya dengan .NET ataupun JRE pada Java.\nDulu, javascript hanya bisa dieksekusi di browser dan hanya untuk frontend saja. Sekarang dengan Node.js, kita dapat menjalankan kode JavaScript di mana pun (frontend maupun backend), tidak hanya terbatas pada lingkungan browser saja.\nNPM\r#\r\rNPM adalah Node Package Manager. Digunakan untuk berbagi tool, menginstal modul, dan mengelola dependensi.\nExpress\r#\r\rExpress adalah framework aplikasi web Node.js. Bagus untuk membuat API karena minimal, cepat dan mudah.\nPerintah Command Line\r#\r\rInstall Node.JS\r#\r\rUbuntu\nsudo apt install nodejs\r Cek Versi\nnpm -v\r Membuat package.json\nnpm init -y\r Install NPM\r#\r\rUbuntu\nsudo apt install npm\r Cek Versi\nnode -v\r Initiate node.js file (Run Server Otomatis)\r#\r\rFile yang dibuat harus di-inisiasi dulu oleh node.js sebelum action lain dijalankan.\nnode app.js\r Membuat Server Node.JS\r#\r\rconst http = require('http');\rconst hostname = 'sipkd.madiunkota.go.id';\rconst port = 3000;\rconst server = http.createServer((req, res) =\u0026gt; {\rres.writeHead(200,{\r\u0026quot;Content-Type\u0026quot; : \u0026quot;text/html\u0026quot;\r});\rres.end('Hello World');\r});\rserver.listen(port, hostname, () =\u0026gt; {\rconsole.log(`Server running at http://${hostname}:${port}/`);\r});\r Jalankan di terminal dengan perintah \u0026lsquo;node app.js\u0026rsquo;\nNode.JS MySql\r#\r\rnpm install mysql\r Membuat koneksi :\nbuatlah file koneksi.js\nvar mysql = require('mysql');\rvar con = mysql.createConnection({\rhost: \u0026quot;localhost\u0026quot;,\ruser: \u0026quot;yourusername\u0026quot;,\rpassword: \u0026quot;yourpassword\u0026quot;\r});\rcon.connect(function(err) {\rif (err) throw err;\rconsole.log(\u0026quot;Connected!\u0026quot;);\r});\r Jalankan di terminal dengan perintah \u0026lsquo;node koneksi.js\u0026rsquo;\nCRUD Node.JS, Express, Bootstrap \u0026amp; MySQL\r#\r\r  Siapkan (download) bootstrap \u0026amp; jquery\nhttps://getbootstrap.com/\nhttps://jquery.com/\n  Siapkan database dan table mysql\nnama db: example nama table: user field: id, username, password\n  Buat folder project\nnama folder: crud\n  Buat package.json\njalankan perintah command line berikut di dalam folder project.\nnpm init\r Perintah diatas akan membuat sebuah file bernama package.json secara otomatis pada project Anda.\n  Install dependencies\nDependencies disini adalah fitur pendukung (seperti: framework, driver, middleware, template) yang harus disediakan untuk menyempurnakan alur aplikasi. Dependencies yang dibutuhkan adalah :\n Express (node.js web framework) MySQL (driver mysql untuk node.js) Body-parser (middleware untuk menjalankan post body request) Handlebars (template engine (seperti blade di laravel) )  Instal dependencies yang dibutuhkan dengan mengetik perintah berikut.\nnpm install --save express mysql body-parser hbs\r Perintah diatas akan menginstall semua dependencies yang kita butuhkan yaitu: express, mysql, body-parser, dan handlebars. Kita bisa pantau dependencies yang terinstall di dalam file package.json.\n  Struktur Project\nBuat folder public dan views di dalam project folder crud.\nBuat folder css dan js di dalam folder public.\nCopy file-file bootstrap.css yang telah di download sebelumnya kedalam folder public/css/.\nCopy file-file bootstrap.js dan jquery pada folder public/js/.\n  Index.js\nBuat file dengan nama index.js di dalam folder project crud. Ketikkan kode berikut.\n//use path module\rconst path = require('path');\r//use express module\rconst express = require('express');\r//use hbs view engine\rconst hbs = require('hbs');\r//use bodyParser middleware\rconst bodyParser = require('body-parser');\r//use mysql database\rconst mysql = require('mysql');\rconst app = express();\r//konfigurasi koneksi\rconst conn = mysql.createConnection({\rhost: 'localhost',\ruser: 'root',\rpassword: '',\rdatabase: 'example'\r});\r//connect ke database\rconn.connect((err) =\u0026gt; {\rif (err) throw err;\rconsole.log('Mysql Connected...');\r});\r//set views file\rapp.set('views', path.join(__dirname, 'views'));\r//set view engine\rapp.set('view engine', 'hbs');\rapp.use(bodyParser.json());\rapp.use(bodyParser.urlencoded({ extended: false }));\r//set folder public sebagai static folder untuk static file\rapp.use('/assets', express.static(__dirname + '/public'));\r//route untuk homepage\rapp.get('/', (req, res) =\u0026gt; {\rlet sql = \u0026quot;SELECT * FROM user\u0026quot;;\rlet query = conn.query(sql, (err, results) =\u0026gt; {\rif (err) throw err;\rres.render('user_view', {\rresults: results\r});\r});\r});\r//route untuk insert data\rapp.post('/save', (req, res) =\u0026gt; {\rlet data = { username: req.body.username, password: req.body.password };\rlet sql = \u0026quot;INSERT INTO user SET ?\u0026quot;;\rlet query = conn.query(sql, data, (err, results) =\u0026gt; {\rif (err) throw err;\rres.redirect('/');\r});\r});\r//route untuk update data\rapp.post('/update', (req, res) =\u0026gt; {\rlet sql = \u0026quot;UPDATE user SET username='\u0026quot; + req.body.username + \u0026quot;', password='\u0026quot; + req.body.password + \u0026quot;' WHERE id=\u0026quot; + req.body.id;\rlet query = conn.query(sql, (err, results) =\u0026gt; {\rif (err) throw err;\rres.redirect('/');\r});\r});\r//route untuk delete data\rapp.post('/delete', (req, res) =\u0026gt; {\rlet sql = \u0026quot;DELETE FROM user WHERE id=\u0026quot; + req.body.id + \u0026quot;\u0026quot;;\rlet query = conn.query(sql, (err, results) =\u0026gt; {\rif (err) throw err;\rres.redirect('/');\r});\r});\r//server listening\rapp.listen(8000, () =\u0026gt; {\rconsole.log('Server is running at port 8000');\r});\r   View\nBuat file dengan nama user_view.hbs didalam folder views. Lalu ketikkan kode berikut.\n\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;CRUD Node.js and Mysql\u0026lt;/title\u0026gt;\r\u0026lt;link href=\u0026quot;/assets/css/bootstrap.css\u0026quot; rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; /\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div class=\u0026quot;container\u0026quot;\u0026gt;\r\u0026lt;h2\u0026gt;User List\u0026lt;/h2\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; class=\u0026quot;btn btn-success\u0026quot; data-bs-toggle=\u0026quot;modal\u0026quot; data-bs-target=\u0026quot;#myModalAdd\u0026quot;\u0026gt;\rAdd New\r\u0026lt;/button\u0026gt;\r\u0026lt;table class=\u0026quot;table table-striped\u0026quot; id=\u0026quot;mytable\u0026quot;\u0026gt;\r\u0026lt;thead\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;ID\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;Username\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;Password\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;Action\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/thead\u0026gt;\r\u0026lt;tbody\u0026gt;\r{{#each results}}\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;{{ id }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ username }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;{{ password }}\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;\r\u0026lt;a href=\u0026quot;javascript:void(0);\u0026quot; class=\u0026quot;btn btn-sm btn-info edit\u0026quot; data-id=\u0026quot;{{ id }}\u0026quot;\rdata-username=\u0026quot;{{ username }}\u0026quot; data-password=\u0026quot;{{ password }}\u0026quot;\u0026gt;Edit\u0026lt;/a\u0026gt;\r\u0026lt;a href=\u0026quot;javascript:void(0);\u0026quot; class=\u0026quot;btn btn-sm btn-danger delete\u0026quot;\rdata-id=\u0026quot;{{ id }}\u0026quot;\u0026gt;Delete\u0026lt;/a\u0026gt;\r\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r{{/each}}\r\u0026lt;/tbody\u0026gt;\r\u0026lt;/table\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- Modal Add Produk--\u0026gt;\r\u0026lt;div class=\u0026quot;modal fade\u0026quot; id=\u0026quot;myModalAdd\u0026quot; tabindex=\u0026quot;-1\u0026quot; role=\u0026quot;dialog\u0026quot; aria-labelledby=\u0026quot;exampleModalLabel\u0026quot;\raria-hidden=\u0026quot;true\u0026quot;\u0026gt;\r\u0026lt;form action=\u0026quot;/save\u0026quot; method=\u0026quot;post\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-dialog\u0026quot; role=\u0026quot;document\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-content\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-header\u0026quot;\u0026gt;\r\u0026lt;h5 class=\u0026quot;modal-title\u0026quot; id=\u0026quot;exampleModalLabel\u0026quot;\u0026gt;Add New User\u0026lt;/h5\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; class=\u0026quot;btn-close\u0026quot; data-bs-dismiss=\u0026quot;modal\u0026quot; aria-label=\u0026quot;Close\u0026quot;\u0026gt;\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;modal-body\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;form-group\u0026quot;\u0026gt;\r\u0026lt;input type=\u0026quot;text\u0026quot; name=\u0026quot;username\u0026quot; class=\u0026quot;form-control\u0026quot; placeholder=\u0026quot;Nama User\u0026quot;\rrequired\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;form-group\u0026quot;\u0026gt;\r\u0026lt;input type=\u0026quot;text\u0026quot; name=\u0026quot;password\u0026quot; class=\u0026quot;form-control\u0026quot; placeholder=\u0026quot;Password\u0026quot; required\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;modal-footer\u0026quot;\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; class=\u0026quot;btn btn-secondary\u0026quot; data-bs-dismiss=\u0026quot;modal\u0026quot;\u0026gt;Close\u0026lt;/button\u0026gt;\r\u0026lt;button type=\u0026quot;submit\u0026quot; class=\u0026quot;btn btn-primary\u0026quot;\u0026gt;Save\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;!-- Modal Update Produk--\u0026gt;\r\u0026lt;form action=\u0026quot;/update\u0026quot; method=\u0026quot;post\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal fade\u0026quot; id=\u0026quot;EditModal\u0026quot; tabindex=\u0026quot;-1\u0026quot; role=\u0026quot;dialog\u0026quot; aria-labelledby=\u0026quot;exampleModalLabel\u0026quot;\raria-hidden=\u0026quot;true\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-dialog\u0026quot; role=\u0026quot;document\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-content\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-header\u0026quot;\u0026gt;\r\u0026lt;h5 class=\u0026quot;modal-title\u0026quot; id=\u0026quot;exampleModalLabel\u0026quot;\u0026gt;Edit Product\u0026lt;/h5\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; class=\u0026quot;btn-close\u0026quot; data-bs-dismiss=\u0026quot;modal\u0026quot; aria-label=\u0026quot;Close\u0026quot;\u0026gt;\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;modal-body\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;form-group\u0026quot;\u0026gt;\r\u0026lt;input type=\u0026quot;text\u0026quot; name=\u0026quot;username\u0026quot; class=\u0026quot;form-control username\u0026quot; placeholder=\u0026quot;Nama User\u0026quot;\rrequired\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;form-group\u0026quot;\u0026gt;\r\u0026lt;input type=\u0026quot;text\u0026quot; name=\u0026quot;password\u0026quot; class=\u0026quot;form-control password\u0026quot; placeholder=\u0026quot;Password\u0026quot;\rrequired\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;modal-footer\u0026quot;\u0026gt;\r\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;id\u0026quot; class=\u0026quot;id\u0026quot;\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; class=\u0026quot;btn btn-secondary\u0026quot; data-bs-dismiss=\u0026quot;modal\u0026quot;\u0026gt;Close\u0026lt;/button\u0026gt;\r\u0026lt;button type=\u0026quot;submit\u0026quot; class=\u0026quot;btn btn-primary\u0026quot;\u0026gt;Update\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;!-- Modal Delete Produk--\u0026gt;\r\u0026lt;form id=\u0026quot;add-row-form\u0026quot; action=\u0026quot;/delete\u0026quot; method=\u0026quot;post\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal fade\u0026quot; id=\u0026quot;DeleteModal\u0026quot; tabindex=\u0026quot;-1\u0026quot; role=\u0026quot;dialog\u0026quot; aria-labelledby=\u0026quot;myModalLabel\u0026quot;\raria-hidden=\u0026quot;true\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-dialog\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-content\u0026quot;\u0026gt;\r\u0026lt;div class=\u0026quot;modal-header\u0026quot;\u0026gt;\r\u0026lt;h5 class=\u0026quot;modal-title\u0026quot; id=\u0026quot;myModalLabel\u0026quot;\u0026gt;Delete User\u0026lt;/h5\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; class=\u0026quot;btn-close\u0026quot; data-bs-dismiss=\u0026quot;modal\u0026quot; aria-label=\u0026quot;Close\u0026quot;\u0026gt;\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;modal-body\u0026quot;\u0026gt;\r\u0026lt;strong\u0026gt;Anda yakin mau menghapus data ini?\u0026lt;/strong\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;div class=\u0026quot;modal-footer\u0026quot;\u0026gt;\r\u0026lt;input type=\u0026quot;hidden\u0026quot; name=\u0026quot;id\u0026quot; class=\u0026quot;form-control id2\u0026quot; required\u0026gt;\r\u0026lt;button type=\u0026quot;button\u0026quot; class=\u0026quot;btn btn-default\u0026quot; data-bs-dismiss=\u0026quot;modal\u0026quot;\u0026gt;Close\u0026lt;/button\u0026gt;\r\u0026lt;button type=\u0026quot;submit\u0026quot; class=\u0026quot;btn btn-success\u0026quot;\u0026gt;Delete\u0026lt;/button\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;script src=\u0026quot;/assets/js/jquery-3.6.0.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script src=\u0026quot;/assets/js/bootstrap.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\r$(document).ready(function () {\r//tampilkan data ke modal untuk edit\r$('#mytable').on('click', '.edit', function () {\rvar id = $(this).data('id');\rvar username = $(this).data('username');\rvar password = $(this).data('password');\r$('#EditModal').modal('show');\r$('.username').val(username);\r$('.password').val(password);\r$('.id').val(id);\r});\r//tampilkan modal hapus record\r$('#mytable').on('click', '.delete', function () {\rvar id = $(this).data('id');\r$('#DeleteModal').modal('show');\r$('.id2').val(id);\r});\r});\r\u0026lt;/script\u0026gt;\r\u0026lt;/body\u0026gt;\r  Testing\nUji coba dengan perintah berikut.\nnode index\r     MVC\r#\r\r  Tambahkan kode berikut pada file “package.json” (dibawah variabel \u0026ldquo;main\u0026rdquo;):\n\u0026quot;type\u0026quot;: \u0026quot;module\u0026quot;,\r   Tambahkan folder route setara dengan folder node_modules.\n  Buat file route.js di dalam folder route. Ketikkan kode berikut.\n//import express\rconst express = require('express');\r// init express router\rconst router = express.Router();\r// Home route\rrouter.get('/', (req, res) =\u0026gt; {\rres.send('Welcome to Home Page');\r});\r// About route\rrouter.get('/about', (req, res) =\u0026gt; {\rres.send('Welcome to About Page');\r});\r// Contact route\rrouter.get('/contact', (req, res) =\u0026gt; {\rres.send('Welcome to Contact Page');\r});\r// export default router\rmodule.exports = router;\r   Ketik pada index.js\n//import express\rconst express = require('express');\r// init express\rconst app = express();\rconst router = require('./routes/routes');\r// const routeUser = require('./routes/user');\r// Use Router\rapp.use('/', router);\r// app.use('/user', routeUser);\r// listen on port\rapp.listen(3000, () =\u0026gt; console.log('Server Running at http://localhost:3000'));\r   Jalankan sesuai route yang dibuat.\n  Full Stack Express, Vue, MySQL, MVC\r#\r\rBackend\r#\r\r  Buat folder \u0026ldquo;backend\u0026rdquo;. Kemudian jalankan npm init -y di terminal untuk membuat package.json.\n  Selanjutnya, install express, mysql2, dan cors dengan mengetikan perintah berikut.\nnpm install express mysql2 cors\r   Tambahkan kode berikut pada file “package.json” (dibawah baris \u0026ldquo;main\u0026rdquo;).\n\u0026quot;type\u0026quot;: \u0026quot;module\u0026quot;,\r   Terapkan MVC. Buat folder “config”, “controllers”, “models”, dan “routes” di dalam folder “backend”.\n  Buat file “database.js” di dalam folder “config”, buat file “user.js” di dalam folder “controllers”, buat file “userModel.js” di dalam folder “models”, buat file “routes.js” di dalam folder “routes”, dan buat file “index.js” di dalam folder “backend”.\n  Frontend\r#\r\r  Tambahkan kode berikut pada file “package.json” (dibawah variabel \u0026ldquo;main\u0026rdquo;):\n\u0026quot;type\u0026quot;: \u0026quot;module\u0026quot;,\r   HBS (Handlebars)\r#\r\r npm init -y npm install express express-handlebars nodemon body-parser \u0026ndash;save buat folder public \u0026amp; views setara node_modules, buat folder layouts \u0026amp; partials buat index.hbs di dalam folder layouts, main.hbs di dalam folder views, index.js setara dengan node_modules  Question \u0026amp; Answer\r#\r\rNPM ERR: npm : Depends: node-gyp\r#\r\rInstall manual package node.js yang kurang\nsudo apt-get install nodejs-dev node-gyp libssl1.0-dev\r Format Date Time\r#\r\rFormat date time default pada nodejs \u0026ldquo;Tue Oct 12 2021 00:00:00 GMT+0700 (WIB)\u0026rdquo;. tambahkan package momentjs untuk Parse, validate, manipulate, dan display dates and times di JavaScript.\nnpm install moment\r Referensi\r#\r\rref: https://mfikri.com/artikel/express-mysql-vue\nref: https://www.youtube.com/watch?v=es9_6RFR7wk\n"}]