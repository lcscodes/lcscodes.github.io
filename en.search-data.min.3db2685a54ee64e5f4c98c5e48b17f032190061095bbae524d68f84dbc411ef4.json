[{"id":0,"href":"/docs/about/","title":"About","section":"Docs","content":"Dokumentasi Teknis LCS tes vcccc\n"},{"id":1,"href":"/docs/github/","title":"Github","section":"Docs","content":"Tentang Github\r#\r\rGithub adalah aplikasi version control (perekam jejak, setiap meng-edit suatu file) berbasis cloud.\nInstall Github tes\r#\r\r  git init\n  git config user.name \u0026ldquo;namamu\u0026rdquo;\n  git config user.email \u0026ldquo;email@mu\u0026rdquo;\n  open folder di VS CODE -\u0026gt; clone\n  setelah pengeditan lakukan -\u0026gt; commit -\u0026gt; push\n  "},{"id":2,"href":"/docs/hugo/","title":"Hugo","section":"Docs","content":"Hugo\r#\r\rCommand Line\r#\r\rhelp : hugo --help\rgenerate folder public : hugo\rnew content : hugo new posts/newpost.md , hugo new docs/newdocs.md\r Installation\r#\r\rWindows 10\r#\r\r  install scoop\nMake sure PowerShell 5 (or later, include PowerShell Core) and .NET Framework 4.5 (or later) are installed. Then run:\nInvoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')\r or shorter\niwr -useb get.scoop.sh | iex\r Note: if you get an error you might need to change the execution policy (i.e. enable Powershell) with\nSet-ExecutionPolicy RemoteSigned -scope CurrentUser\r   install hugo dengan scoop\nscoop install hugo-extended\r install theme (cari di web hugo)\ngit submodule add https://github.com/alex-shpak/hugo-book themes/book\r Then run hugo (or set theme = \u0026ldquo;book\u0026rdquo;/theme: book in configuration file)\nhugo server --minify --theme book\r   jalankan web dengan perintah\nhugo server\r copy link server ke browser.\nUntuk generate folder public\ncommand: hugo\r folder public akan muncul, website statis siap di upload.\n  "},{"id":3,"href":"/docs/laravel/","title":"Laravel","section":"Docs","content":"Laravel\r#\r\rInstallation On Windows\r#\r\r  install composer\n  buat project\ncomposer create-project laravel/laravel example-app\r Develop server\ncd example-app\rartisan serve\r   Basic Usage\r#\r\rSet Database\r#\r\rOpen file .env di root folder\r Make Model\r#\r\r php artisan make:model \u0026lt;model-name\u0026gt; -m\rTambahan -m artinya untuk generate database migration sekaligus\r Set Migration\r#\r\rPada folder root/database/migration, lengkapi field untuk databasenya. contoh :\r$table-\u0026gt;id();\r$table-\u0026gt;string('nama',100);\r$table-\u0026gt;string('alamat',100);\r$table-\u0026gt;date('tanggalJoin');\r$table-\u0026gt;timestamps();\r migrate database\r#\r\r php artisan migrate\rrollback migrate database\rphp artisan migrate:rollback\rBuka model di root/app/Models/\u0026lt;model-name\u0026gt;. isikan data berikut:\rclass Customer extends Model\r{\rprotected $table = \u0026quot;pegawai\u0026quot;;\rprotected $primaryKey = \u0026quot;id\u0026quot;;\rprotected $fillable =['id','nama','alamat','tanggal_lahir'];\r}\r Laravel Modular\r#\r\rInstallation On Windows\r#\r\r  install composer\n  buat project\ncomposer create-project laravel/laravel example-app\r Develop server\ncd example-app\rphp artisan serve\r   install nwidart modules\ncomposer require nwidart/laravel-modules\r Publish the package\u0026rsquo;s configuration file\nphp artisan vendor:publish --provider=\u0026quot;Nwidart\\Modules\\LaravelModulesServiceProvider\u0026quot;\r By default the module classes are not loaded automatically. autoload your modules. edit file composer.json at root directory. add script autoload modules\n{\r\u0026quot;autoload\u0026quot;: {\r\u0026quot;psr-4\u0026quot;: {\r\u0026quot;App\\\\\u0026quot;: \u0026quot;app/\u0026quot;,\r\u0026quot;Modules\\\\\u0026quot;: \u0026quot;Modules/\u0026quot;\r}\r}\r}\r run autoload\ncomposer dump-autoload\r   Basic Usage Modular\r#\r\r  Creating a module\nHuruf awal kapital\nphp artisan module:make \u0026lt;module-name\u0026gt;\r Beberapa modul sekaligus\nphp artisan module:make \u0026lt;module-name\u0026gt; \u0026lt;module-name\u0026gt; \u0026lt;module-name\u0026gt;\r   "}]